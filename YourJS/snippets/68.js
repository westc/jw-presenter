storeSnippet({"id":68,"name":"splitLines() - Array of Lines","description":"Turns a string with multiple lines into an array of strings where each string in the array is one of the lines.","js":"function splitLines(str, opt_keepEnds) {\r\n  var start = 0, ret = [], l;\r\n  \/\/ Not using split because of IE8 error.\r\n  str.replace(\/\\r\\n?|[\\n\\x0B\\x0C\\x1C-\\x1E\\x85\\u2028\\u2029]\/g, function(m, i) {\r\n    l = m.length;\r\n    ret.push(str.slice(start, opt_keepEnds ? i + l : i));\r\n    start = i + l;\r\n  });\r\n  if (str = str.slice(start)) {\r\n    ret.push(str);\r\n  }\r\n  return ret;\r\n}","post":"Python provides an excellent function called <a href=\"https:\/\/docs.python.org\/3\/library\/stdtypes.html#str.splitlines\" target=\"_blank\">`string.splitlines()`<\/a> which effectively turns a string into a list of strings.  Now you can do the same thing in JavaScript using <code>YourJS.splitLines(str, opt_keepEnds)<\/code>.\r\n\r\n<h2><code>splitLines(...)<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px\">\r\n  <h3>Description<\/h3>\r\n  <div>Turns a string with multiple lines into an array of strings where each string in the array is one of the lines.<\/div>\r\n  \r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>str<\/code> {string}:<\/b><br \/>\r\n      The string which will be split into an array of strings.\r\n    <\/li>\r\n    <li>\r\n      <b><code>opt_keepEnds<\/code> {boolean=}:<\/b><br \/>\r\n      Optional.  Defaults to <code>false<\/code>.  If <code>true<\/code> the strings within the returned array will end in the character(s) which caused the line separation.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>Returns an array of strings where each string is a separate line found in <code>str<\/code>.  If the last line has nothing on it, it will not be included in the returned array.<\/div>\r\n<\/div>","required_ids":{},"tags":["Array","String"],"variables":["splitLines"]});