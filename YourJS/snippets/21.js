storeSnippet({"id":21,"name":"param()","description":"Essentially allows values to be passed to a function by name.  Also provides the ability to set default values.","js":"function param(callback, arrFields) {\r\n  for (var t, defaults = [], len = arrFields.length, i = len; i--;) {\r\n    t = toArray(arrFields[i]);\r\n    if (1 in t) {\r\n      defaults[i] = t[1];\r\n    }\r\n    arrFields[i] = t[0];\r\n  }\r\n\r\n  return function(fields) {\r\n    fields = Object(fields);\r\n    for (var t, args = slice(arguments, 0), i = len; i--;) {\r\n      args.unshift(fields && (has(fields, t=arrFields[i]) || !has(defaults, i) ? fields[t] : defaults[i]));\r\n    }\r\n    return callback.apply(this, args);\r\n  };\r\n}","post":"One thing that we can't do in JavaScript is pass arguments by name, but with <code>param(...)<\/code> we can:\r\n```javascript\r\nvar sayWhoYouAre = YourJS.param(\r\n  ['firstName', 'lastName', 'age'],\r\n  function(firstName, lastName, age) {\r\n    alert('Your name is ' + firstName + ' ' + lastName + ' and you are ' + age + ' year' + (age - 1 ? 's' : '') + ' old.');\r\n  }\r\n);\r\n```\r\n\r\nIn order to call the above function while passing the arguments by name we can do the following:\r\n```javascript\r\nsayWhoYouAre({\r\n  firstName: 'Chris',\r\n  lastName: 'West',\r\n  age: 25\r\n});\r\n```\r\n\r\n<h2><code>param(...)<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px;\">\r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>callback<\/code> {Function}:<\/b><br \/>\r\n      The function which is called with the modified arguments passed in.\r\n    <\/li>\r\n    <li>\r\n      <b><code>arrFields<\/code> {Array}:<\/b><br \/>\r\n      An array indicating the key where to get the argument values at the corresponding indices.  Each array item can either be a string (<code>key<\/code>) or an array where the first item is a string (<code>key<\/code>) and the second is the default value.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>Returns a wrapper function which when called will pass in the arguments as specified by <code>arrFields<\/code> using the first argument as the basis for the keys specified.<\/div>\r\n<\/div>","required_ids":{"81":"isArrayLike() & toArray()"},"tags":["Function"],"variables":["param"]});