storeSnippet({"id":53,"name":"doEvery()","description":"Call a function repeatedly, waiting a specific amount of time between calls.  This is a different from setInterval() because the initial call is made immediately.","js":"function doEvery(fn, interval, opt_arrParams) {\r\n  function wrappedFunction() {\r\n    counter++;\r\n    end && fn.apply(end, opt_arrParams.concat([counter, start]));\r\n  }\r\n  function end() {\r\n    end = undefined;\r\n    clearInterval(id);\r\n  }\r\n  opt_arrParams = opt_arrParams || [];\r\n  setTimeout(wrappedFunction, 0);\r\n  var id = setInterval(wrappedFunction, interval), start = new Date, counter = 0;\r\n  return end;\r\n}","post":"<h2><code>doEvery(...)<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px\">\r\n  <h3>Description<\/h3>\r\n  <div>Calls a function repeatedly waiting the specified amount of time between each call.  Similar to <code>setInterval()<\/code> but instead of waiting on the initial call, the initial is made immediately.<\/div>\r\n  \r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>fn<\/code> {Function(..., <code>timesCalled<\/code>, <code>start<\/code>)}:<\/b><br \/>\r\n      The function to be called repeatedly after waiting specified interval of time between each call.  The <code>this<\/code> object will be a function that when execute will prevent future calls from being made.  The second-to-last parameter passed to this function when called will indicate how many times the function was called.  The last parameter passed will indicate when <code>doEvery(...)<\/code> was called.\r\n    <\/li>\r\n    <li>\r\n      <b><code>interval<\/code> {number}:<\/b><br \/>\r\n      A positive integer indicating how many milliseconds to wait in between calls to <code>fn<\/code>\r\n    <\/li>\r\n    <li>\r\n      <b><code>opt_arrParams<\/code> {Array}:<\/b><br \/>\r\n      Optional.  Defaults to the empty array.  An array of the arguments to be passed to <code>fn()<\/code>.  In addition, the last two parameters passed will be the amount of times the wrapper function called <code>fn()<\/code> and the starting time.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>Returns a function that when ends the repeated calling of <code>fn()<\/code> by the created wrapper function.<\/div>\r\n<\/div>","required_ids":{},"tags":["Function"],"variables":["doEvery"]});