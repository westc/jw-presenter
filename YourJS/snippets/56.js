storeSnippet({"id":56,"name":"Parsing URL Query Strings","description":"Parses a URL to get the parameters specified in the query string.","js":"function parseQS(url) {\r\n  var vars = {};\r\n  url.replace(\/\\?[^#]+\/, function(query) {\r\n    query.replace(\/\\+\/g, ' ').replace(\/[\\?&]([^=&#]+)(?:=([^&#]*))?\/g, function(m, key, value, arrIndicator, alreadyDefined, lastValue) {\r\n      key = decodeURIComponent(key);\r\n      if (arrIndicator = key.slice(-2) == '[]') {\r\n        key = key.slice(0, -2);\r\n      }\r\n      value = value && decodeURIComponent(value);\r\n      alreadyDefined = has(vars, key);\r\n      lastValue = vars[key];\r\n      vars[key] = arrIndicator || alreadyDefined\r\n        ? typeOf(lastValue, 'Array')\r\n          ? lastValue.concat([value])\r\n          : alreadyDefined\r\n            ? [lastValue, value]\r\n            : [value]\r\n        : value;\r\n    });\r\n  });\r\n  return vars;\r\n}","post":"In <b>jPaq<\/b> I had defined an object called <code>jPaq.GET<\/code> which contained the variables passed via the query string of the page's URL.  This time around, I decided to avoid that technique and instead allow the developer to choose which URLs to parse in order to get an object of the variables found in the query string.\r\n\r\n<h2><code>parseQS<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px;\">\r\n  <h3>Description<\/h3>\r\n  <div>Parses a URL to get the parameters specified in the query string.<\/div>\r\n  \r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>url<\/code> {String}:<\/b><br \/>\r\n      The URL to parse.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>Returns an object in which the keys are the keys of the parameters found in <code>url<\/code> and the values are the corresponding values found in <code>url<\/code>.  If a parameter key is specified twice or ends in \"<code>[]<\/code>\", that property will be an array of all of the found values for that key.<\/div>\r\n<\/div>","required_ids":{},"tags":["Array","Browser","Object","String","URL"],"variables":["parseQS"]});