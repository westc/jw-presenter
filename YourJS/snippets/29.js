storeSnippet({"id":29,"name":"replace() - String Replacement","description":"Replace 1 occurrence or as many occurrences as you like of a substring.","js":"function replace(original, target, replacement, opt_maxReplacements) {\r\n  var isRegExp = typeOf(target, 'RegExp');\r\n  var isFn = typeOf(replacement, 'Function');\r\n  return original.replace(\r\n    new RegExp(\r\n      isRegExp ? target.source : quoteRegExp(target),\r\n      isRegExp ? (target + '').replace(\/[\\s\\S]+\\\/(\\w*?)g?(\\w*)\/, '$1$2g') : 'g'\r\n    ),\r\n    function(m) {\r\n      return !(opt_maxReplacements-- <= 0) ? isFn ? replacement.apply(this, arguments) : replacement : m;\r\n    }\r\n  );\r\n}","post":"The native string replacement function gives us the ability to replace one or all occurrences of a substring matching a `RegExp` but it doesn't give us the ability to replace all occurrences of a specified `string`.  For this reason `YourJS.replace(...)` was created.\r\n\r\n<h2><code>replace(...)<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px;\">\r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>original<\/code> {string}:<\/b><br \/>\r\n      The string to be modified.\r\n    <\/li>\r\n    <li>\r\n      <b><code>target<\/code> {RegExp|string}:<\/b><br \/>\r\n      The substring to be found in <code>original<\/code> and replaced with <code>replacement<\/code>.\r\n    <\/li>\r\n    <li>\r\n      <b><code>replacement<\/code> {Function|string}:<\/b><br \/>\r\n      If a function is passed in, it will be called and the return value will be the string replacing the occurrence(s) of <code>target<\/code>.  The first argument will be the matched substring, the penultimate argument will the index within <code>original<\/code> where the substring was found and the last argument will be a copy an unaltered <code>original<\/code>.  If <code>target<\/code> is a <code>RegExp<\/code> with parenthesized submatches those matches will also be passed in after the first argument but before the index and the copy of <code>original<\/code>.  If this is a string, this will be the string replacing the occurrence(s) of <code>target<\/code>.\r\n    <\/li>\r\n    <li>\r\n      <b><code>opt_maxReplacements<\/code> {number}:<\/b><br \/>\r\n      Optional.  Defaults to <code>Infinity<\/code>.  The maximum number of times <code>target<\/code> will be replaced.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>Returns a modified copy of <code>original<\/code> with instances <code>target<\/code> replaced by <code>replacement<\/code>.<\/div>\r\n<\/div>","required_ids":{"27":"quoteRegExp() - Escaping RegExp Metacharacters"},"tags":["String"],"variables":["replace"]});