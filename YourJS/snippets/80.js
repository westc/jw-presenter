storeSnippet({"id":80,"name":"time() - Timing Function Execution","description":"Creates a wrapper which executes the function and indicates the timing information of the execution.","js":"function time(fn, times) {\r\n  if (typeOf(times, 'Array')) {\r\n    var arr = times;\r\n    times = function(timeElapsed, start, end, returnValue, args, context) {\r\n      arr.push(extend(Object(timeElapsed), {\r\n        start: start,\r\n        end: end,\r\n        returnValue: returnValue,\r\n        context: context,\r\n        arguments: args\r\n      }));\r\n    };\r\n  }\r\n  return function() {\r\n    var start = new Date,\r\n        ret = fn.apply(this, arguments),\r\n        end = new Date;\r\n    times.call(fn, end - start, start, end, ret, arguments, this);\r\n  };\r\n}","post":"<h2><code>time(...)<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px\">\r\n  <h3>Description<\/h3>\r\n  <div>Creates a wrapper which executes the function and indicates the timing information of the execution.<\/div>\r\n  \r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>fn<\/code> {Function}:<\/b><br \/>\r\n      The function to wrap so as to properly get the starting time and ending time of its execution.\r\n    <\/li>\r\n    <li>\r\n      <div><b><code>times<\/code> {Array|Function}:<\/b><\/div>\r\n      <ul>\r\n        <li>\r\n          <b><code class=\"language-javascript\">Array.&lt;{ start: number, end: number, returnValue: *, arguments: Arguments, context: * }<\/code><\/b><br \/>\r\n          If it is an array, a new timing data <code>Number<\/code> object will be appended to it after every execution of the wrapped function.  The number object's value will represent the amount of time that elapsed in milliseconds executing the function.  The timing data <code>Number<\/code> object will have the following property keys set:  <code>start<\/code>, <code>end<\/code>, <code>returnValue<\/code>, <code>arguments<\/code>, and <code>context<\/code>.\r\n        <\/li>\r\n        <li>\r\n          <b><code class=\"language-javascript\">function(this: fn, elapsed, start, end, returnValue, args, context)<\/code><\/b><br \/>\r\n          If it is a function, after every execution of <code>fn()<\/code>, this function will be called with the following arguments:  :  <code>start<\/code>, <code>end<\/code>, <code>returnValue<\/code>, <code>arguments<\/code>, and <code>context<\/code>.  The context (or <code>this<\/code>) will be a reference to <code>fn()<\/code>.\r\n        <\/li>\r\n      <\/ul>\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>Returns the wrapped function.  This function, when executed, will pass the context object and the arguments as is to <code>fn()<\/code> and the return value will be that of <code>fn()<\/code>.<\/div>\r\n<\/div>","required_ids":{},"tags":["Function"],"variables":["time"]});