storeSnippet({"id":122,"name":"func() - Create A Function with Context","description":"Create a function with a specified context.","js":"function func(arrArgs, strBody, opt_objContext, opt_name) {\r\n  var k, fn, arrContextVars = [], arrContextArgs = [];\r\n  for (k in opt_objContext || {}) {\r\n    if (has(opt_objContext, k) && isValidVarName(k)) {\r\n      arrContextVars.push(k);\r\n      arrContextArgs.push(opt_objContext[k]);\r\n    }\r\n  }\r\n  return eval('(function(f,a){return function ' + ((opt_name != undefined && isValidVarName(opt_name)) ? opt_name : '') + '(){return f.apply(this,a.concat([arguments]))}})')(\r\n    Function(\r\n      arrContextVars.join(','),\r\n      'return(function(' + arrArgs.join(',') + '){' + strBody + '}).apply(this,arguments[arguments.length-1])'\r\n    ),\r\n    arrContextArgs\r\n  );\r\n}","post":"<h2><code>func(...)<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px;\">\r\n  <h3>Description<\/h3>\r\n  <div>Creates a function with a specified context.<\/div>\r\n  \r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li><b><code>arrArgs<\/code> {Array.&lt;string&gt;}:<\/b><br \/>The names of arguments.<\/li>\r\n    <li><b><code>strBody<\/code> {string}:<\/b><br \/>The body of the function as a string.<\/li>\r\n    <li><b><code>opt_objContext<\/code> {Object}:<\/b><br \/>Optional.  If specified, the properties of this object whose names are valid variable names will be accessible by the function.<\/li>\r\n    <li><b><code>opt_name<\/code> {string}:<\/b><br \/>Optional.  If specified and is a valid variable name it will be used as the returned function name.<\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>Returns a function where <code>arrArgs<\/code> are the argument names, <code>strBody<\/code> is the body of the function, the <code>opt_objContext<\/code> properties can be directly accessed by the function and <code>opt_name<\/code> is the name of the function.<\/div>\r\n  \r\n  <h3>Example<\/h3>\r\n  <pre class=\"language-javascript\"><code>console.log(YourJS.func(['a','b'], 'return !typeOf(a,b)', YourJS, 'isNotOfType'));<\/code><\/pre>\r\n<\/div>","required_ids":{"120":"isValidVarName()"},"tags":["Function"],"variables":["func"]});