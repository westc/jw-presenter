storeSnippet({"id":33,"name":"Rounding with Precision","description":"Allows for rounding with precision with minimal risk of floating-point rounding issues.","js":"'ceil floor round'.replace(\/\\w+\/g, function(fnName, RGX_NUM_BOUNDS, RGX_EXTRA_DOT) {\r\n  RGX_NUM_BOUNDS = \/^-?|$\/g;\r\n  RGX_EXTRA_DOT = \/(\\.\\d*)\\.\/;\r\n  YourJS[fnName] = function(num, opt_precision) {\r\n    opt_precision = opt_precision || 0;\r\n    var absPrecision = Math.abs(opt_precision);\r\n    var zeroesSub = '$&' + new Array(absPrecision + 2).join('0');\r\n    var rgxGrow = new RegExp('(\\\\.)(\\\\d{' + absPrecision + '})');\r\n    var rgxShrink = new RegExp('(\\\\d{' + absPrecision + '})(\\\\.)');\r\n    num = (num + '.').replace(RGX_NUM_BOUNDS, zeroesSub)\r\n      .replace(RGX_EXTRA_DOT, '$1')\r\n      .replace(opt_precision < 0 ? rgxShrink : rgxGrow, '$2$1');\r\n    num = (Math[fnName](+num) + '.').replace(RGX_NUM_BOUNDS, zeroesSub)\r\n      .replace(RGX_EXTRA_DOT, '$1')\r\n      .replace(opt_precision < 0 ? rgxGrow : rgxShrink, '$2$1');\r\n    return +num;\r\n  };\r\n});","post":"A while back I wrote <a href=\"http:\/\/cwestblog.com\/2012\/11\/09\/javascript-rounding-with-precision\/\" target=\"_blank\">a short blog post about this very topic<\/a>.  Unfortunately, due to the incomplete representation of floating point numbers in JavaScript, my rounding functions didn't always return the expected result.  After working through a more string-based solution I came up with the above buildable snippet which adds `YourJS.ceil()`, `YourJS.floor()` and `YourJS.round()`.\r\n\r\n<h3><code>YourJS.ceil(...)<\/code> API Documentation<\/h3>\r\n<div style=\"margin: 0 30px 30px;\">\r\n  <h2>Description<\/h2>\r\n  <div>Rounds towards <code>Infinity<\/code> with the specified precision.<\/div>\r\n  \r\n  <h2>Parameters<\/h2>\r\n  <ol>\r\n    <li>\r\n      <b><code>num<\/code> {number}:<\/b><br \/>\r\n      The number to be rounded towards <code>Infinity<\/code>.\r\n    <\/li>\r\n    <li>\r\n      <b><code>opt_precision<\/code> {number}:<\/b><br \/>\r\n      Optional.  Defaults to <code>0<\/code>.  The precision (as an integer) with which to round the number towards <code>Infinity<\/code>.  Using the precision is similar to doing <code>Math.ceil(num * Math.pow(10, precision)) \/ Math.pow(10, precision)<\/code>.  Eg.  <code>YourJS.ceil(1.23, 1) -&gt; 1.3<\/code> and <code>YourJS.ceil(123.456, -1) -&gt; 130<\/code>.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h2>Returns<\/h2>\r\n  <div>Returns <code>num<\/code> rounded towards <code>-Infinity<\/code> with the specified precision.<\/div>\r\n<\/div>\r\n\r\n<h3><code>YourJS.floor(...)<\/code> API Documentation<\/h3>\r\n<div style=\"margin: 0 30px 30px;\">\r\n  <h2>Description<\/h2>\r\n  <div>Rounds towards <code>-Infinity<\/code> with the specified precision.<\/div>\r\n  \r\n  <h2>Parameters<\/h2>\r\n  <ol>\r\n    <li>\r\n      <b><code>num<\/code> {number}:<\/b><br \/>\r\n      The number to be rounded towards <code>Infinity<\/code>.\r\n    <\/li>\r\n    <li>\r\n      <b><code>opt_precision<\/code> {number}:<\/b><br \/>\r\n      Optional.  Defaults to <code>0<\/code>.  The precision (as an integer) with which to round the number towards <code>-Infinity<\/code>.  Using the precision is similar to doing <code>Math.floor(num * Math.pow(10, precision)) \/ Math.pow(10, precision)<\/code>.  Eg.  <code>YourJS.floor(1.23, 1) -&gt; 1.2<\/code> and <code>YourJS.floor(123.456, -1) -&gt; 120<\/code>.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h2>Returns<\/h2>\r\n  <div>Returns <code>num<\/code> rounded towards <code>-Infinity<\/code> with the specified precision.<\/div>\r\n<\/div>\r\n\r\n<h3><code>YourJS.round(...)<\/code> API Documentation<\/h3>\r\n<div style=\"margin: 0 30px 30px;\">\r\n  <h2>Description<\/h2>\r\n  <div>Rounds with the specified precision.<\/div>\r\n  \r\n  <h2>Parameters<\/h2>\r\n  <ol>\r\n    <li>\r\n      <b><code>num<\/code> {number}:<\/b><br \/>\r\n      The number to be rounded.\r\n    <\/li>\r\n    <li>\r\n      <b><code>opt_precision<\/code> {number}:<\/b><br \/>\r\n      Optional.  Defaults to <code>0<\/code>.  The precision (as an integer) with which to round the number.  Using the precision is similar to doing <code>Math.round(num * Math.pow(10, precision)) \/ Math.pow(10, precision)<\/code>.  Eg.  <code>YourJS.round(1.55, 1) -&gt; 1.6<\/code> and <code>YourJS.round(153, -1) -&gt; 150<\/code>.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h2>Returns<\/h2>\r\n  <div>Returns <code>num<\/code> rounded with the specified precision.<\/div>\r\n<\/div>","required_ids":{},"tags":["Number"],"variables":["ceil","floor","round"]});