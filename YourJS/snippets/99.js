storeSnippet({"id":99,"name":"callReturn() - Call & Return A Function","description":"Calls a function and then returns the function that was called.","js":"function callReturn(fn) {\r\n  fn.apply(this, slice(arguments, 1));\r\n  return fn;\r\n}","post":"<h2><code>callReturn()<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px\">\r\n  Calls a function and then return the function that was called.\r\n  \r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>fn<\/code> {Function}:<\/b><br \/>\r\n      The function to be called and returned.  The return value of this function will be ignored.\r\n    <\/li>\r\n    <li>\r\n      <b><code>...args<\/code> {*}:<\/b><br \/>\r\n      Every argument that is passed after <code>fn<\/code> will be passed as an argument to <code>fn<\/code> when it is called.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>Returns <code>fn<\/code>.<\/div>\r\n<\/div>\r\n\r\n<h2>When Useful<\/h2>\r\n<div style=\"margin: 0 30px 30px\">\r\n  <ol>\r\n    <li>When you need to call a function that is also being bound to an event.<\/li>\r\n    <li>When you need to call a function that is also being assigned to a variable and you want the function name to persist.<\/li>\r\n  <\/ol>\r\n<\/div>","required_ids":{},"tags":["Function"],"variables":["callReturn"]});