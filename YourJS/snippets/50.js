storeSnippet({"id":50,"name":"reParam()","description":"Creates a wrapper function which when called reorganizes the parameters and then calls the wrapped function.","js":"function reParam(callback, arrFields) {\r\n  arrFields = arrFields.slice();\r\n  for (var len = arrFields.length, i = len; i--;) {\r\n    arrFields[i] = (arrFields[i] + '').split('.');\r\n  }\r\n  return function() {\r\n    for (var args = arguments, arr = [args], i = len; i--;) {\r\n      for (var part = args, parts = arrFields[i], pLen = parts.length, j = 0; j < pLen && part != undefined; j++) {\r\n        part = part[parts[j]];\r\n      }\r\n      arr.unshift(part);\r\n    }\r\n    return callback.apply(this, arr);\r\n  };\r\n}","post":"<h2><code>reParam(...)<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px\">\r\n  <div>Creates a wrapper function which when called reorganizes the parameters and then calls the wrapped function.<\/div>\r\n  \r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>callback<\/code> {Function}:<\/b><br \/>\r\n      The function to be wrapped.\r\n    <\/li>\r\n    <li>\r\n      <b><code>arrFields<\/code> {Array.&lt;string&gt;}:<\/b><br \/>\r\n      Array of paths to values that should be passed to <code>callback<\/code>.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>The wrapper function of <code>callback<\/code>.<\/div>\r\n<\/div>","required_ids":{},"tags":["Function"],"variables":["reParam"]});