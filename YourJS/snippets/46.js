storeSnippet({"id":46,"name":"debounce()","description":"Creates a copy of a function which will not execute until a specified amount of time has passed since the previous call to the function was made.","js":"function debounce(fn, msBetweenCalls, opt_immediate) {\r\n  var timeoutID,\r\n      result;\r\n  return function() {\r\n    var objThis = this,\r\n        args = arguments;\r\n    if (opt_immediate && !timeoutID) {\r\n      fnDebounced();\r\n    }\r\n    clearTimeout(timeoutID);\r\n    timeoutID = setTimeout(fnDebounced, msBetweenCalls);\r\n    function fnDebounced(oldTimeoutID) {\r\n      timeoutID = 0;\r\n      if (!opt_immediate) {\r\n        result = fn.apply(objThis, args);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n}","post":"<h2><code>debounce()<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px\">\r\n  <h3>Description<\/h3>\r\n  <div>Creates a debounced copy of the function which when called will delay the execution until the specified amount of milliseconds have elapsed since the last time it ran.<\/div>\r\n  \r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>fnCallback<\/code> {Function}:<\/b><br \/>\r\n      The function to debounce.  The context and parameters sent to the debounced function will be sent to this function.\r\n    <\/li>\r\n    <li>\r\n      <b><code>delay<\/code> {Number}:<\/b><br \/>\r\n      The amount of milliseconds that must pass since the last call to this function before <code>fnCallback<\/code> will be invoked.\r\n    <\/li>\r\n    <li>\r\n      <b><code>opt_immediate<\/code> {Boolean}:<\/b><br \/>\r\n      Optional.  Defaults to false.  Specify true if the debounce function should run immediately instead of initially waiting for the <code>delay<\/code>.  If true is specified, when the debounced function runs, if the <code>delay<\/code> has elapsed, the value returned from the debounced function will be that which was returned by <code>fnCallback<\/code>.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>The debounced copy of <code>fnCallback<\/code>.<\/div>\r\n<\/div>","required_ids":{},"tags":["Function"],"variables":["debounce"]});