storeSnippet({"id":30,"name":"nthRoot()","description":"Finds the nth root of a number.","js":"function nthRoot(root, x) {\r\n  try {\r\n    var negate = root % 2 == 1 && x < 0;\r\n    if(negate)\r\n      x = -x;\r\n    var possible = Math.pow(x, 1 \/ root);\r\n    root = Math.pow(possible, root);\r\n    if(Math.abs(x - root) < 1 && (x > 0 == root > 0))\r\n      return negate ? -possible : possible;\r\n  } catch(e){}\r\n}","post":"In JS we can easily find the square-root of a number by using `Math.sqrt(number)`.  On the other hand, finding the n<sup>th<\/sup>-root of a number can be a bit more challenging unless you use a library like YourJS.  For instance if we wanted to find the 5<sup>th<\/sup>-root of 243 we could use `YourJS.nthRoot()` as shown below:\r\n```javascript\r\nconsole.log(YourJS.nthRoot(5, 243));\r\n\/\/ -> 3\r\n```\r\n\r\n<h2><code>nthRoot(...)<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px;\">\r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>root<\/code> {number}:<\/b><br \/>\r\n      The amount to which the number should be rooted.  Eg.  for square-root you would pass in <code>2<\/code>.\r\n    <\/li>\r\n    <li>\r\n      <b><code>x<\/code> {number}:<\/b><br \/>\r\n      The number that should be rooted.  Eg.  for square-root of <code>81<\/code>, <code>81<\/code> would be passed in here.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>Returns the the equivalent of <code>x<sup>1\/root<\/sup><\/code>.<\/div>\r\n<\/div>","required_ids":{},"tags":["Math","Number"],"variables":["nthRoot"]});