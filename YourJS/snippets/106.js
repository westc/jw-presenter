storeSnippet({"id":106,"name":"mod() - Python Style Modulo","description":"Finds the remainder after dividing one number by another number while assuring that the remainder always carries the same sign as the divisor.","js":"function mod(dividend, divisor) {\r\n  return (dividend % divisor + divisor) % divisor;\r\n}","post":"<h2><code>mod(...)<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px\">\r\n  <div>Finds the remainder after dividing one number by another number while assuring that the remainder always carries the same sign as the <code>divisor<\/code>.<\/div>\r\n  \r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>dividend<\/code> {number}:<\/b><br \/>\r\n      The number to be divided by the divisor.\r\n    <\/li>\r\n    <li>\r\n      <b><code>divisor<\/code> {number}:<\/b><br \/>\r\n      The number to divide the dividend.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>The remainder after dividing <code>dividend<\/code> by <code>divisor<\/code>.  This value will always be between 0 (inclusive) and the divisor (non-inclusive).<\/div>\r\n<\/div>\r\n\r\n<h2>Example<\/h2>\r\n<div><b>Mod by a positive integer:<\/b><\/div>\r\n```javascript\r\nconsole.log(YourJS.mod(7, 3));  \/\/ -> 1\r\nconsole.log(YourJS.mod(6, 3));  \/\/ -> 0\r\nconsole.log(YourJS.mod(5, 3));  \/\/ -> 2\r\nconsole.log(YourJS.mod(4, 3));  \/\/ -> 1\r\nconsole.log(YourJS.mod(3, 3));  \/\/ -> 0\r\nconsole.log(YourJS.mod(2, 3));  \/\/ -> 2\r\nconsole.log(YourJS.mod(1, 3));  \/\/ -> 1\r\nconsole.log(YourJS.mod(0, 3));  \/\/ -> 0\r\nconsole.log(YourJS.mod(-1, 3));  \/\/ -> 2\r\nconsole.log(YourJS.mod(-2, 3));  \/\/ -> 1\r\nconsole.log(YourJS.mod(-3, 3));  \/\/ -> 0\r\nconsole.log(YourJS.mod(-4, 3));  \/\/ -> 2\r\n```\r\n\r\n<div><b>Mod by a negative integer:<\/b><\/div>\r\n```javascript\r\nconsole.log(YourJS.mod(7, -3));  \/\/ -> -2\r\nconsole.log(YourJS.mod(6, -3));  \/\/ -> -0\r\nconsole.log(YourJS.mod(5, -3));  \/\/ -> -1\r\nconsole.log(YourJS.mod(4, -3));  \/\/ -> -2\r\nconsole.log(YourJS.mod(3, -3));  \/\/ -> -0\r\nconsole.log(YourJS.mod(2, -3));  \/\/ -> -1\r\nconsole.log(YourJS.mod(1, -3));  \/\/ -> -2\r\nconsole.log(YourJS.mod(0, -3));  \/\/ -> -0\r\nconsole.log(YourJS.mod(-1, -3));  \/\/ -> -1\r\nconsole.log(YourJS.mod(-2, -3));  \/\/ -> -2\r\nconsole.log(YourJS.mod(-3, -3));  \/\/ -> -0\r\nconsole.log(YourJS.mod(-4, -3));  \/\/ -> -1\r\n```\r\n\r\n<div><b>Mod by a positive floating point:<\/b><\/div>\r\n```javascript\r\nconsole.log(YourJS.mod(-2, 1.25));  \/\/ -> 0.5\r\nconsole.log(YourJS.mod(-1, 1.25));  \/\/ -> 0.25\r\nconsole.log(YourJS.mod(0, 1.25));  \/\/ -> 0\r\nconsole.log(YourJS.mod(1, 1.25));  \/\/ -> 1\r\nconsole.log(YourJS.mod(2, 1.25));  \/\/ -> 0.75\r\nconsole.log(YourJS.mod(3, 1.25));  \/\/ -> 0.5\r\n```\r\n\r\n<div><b>Mod by a negative floating point:<\/b><\/div>\r\n```javascript\r\nconsole.log(YourJS.mod(-2, -1.25));  \/\/ -> -0.75\r\nconsole.log(YourJS.mod(-1, -1.25));  \/\/ -> -1\r\nconsole.log(YourJS.mod(0, -1.25));  \/\/ -> -0\r\nconsole.log(YourJS.mod(1, -1.25));  \/\/ -> -0.25\r\nconsole.log(YourJS.mod(2, -1.25));  \/\/ -> -0.5\r\nconsole.log(YourJS.mod(3, -1.25));  \/\/ -> -0.75\r\n```","required_ids":{},"tags":["Math","Number"],"variables":["mod"]});