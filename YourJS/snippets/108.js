storeSnippet({"id":108,"name":"pull() - Get The Value At a Specific Path","description":"Retrieve the value found at a given path within an object.","js":"function pull(obj, path, opt_noErrorDefault) {\r\n  path = typeOf(path, 'String') ? path.split('.') : path;\r\n  for (var doError = arguments.length < 3, i = 0, l = path.length; i < l; i++) {\r\n    if (obj != undefined && path[i] in Object(obj)) {\r\n      obj = obj[path[i]];\r\n    }\r\n    else if (doError) {\r\n      throw new Error('There is no value at \"' + slice(path, 0, i + 1).join('.') + '\".');\r\n    }\r\n    else {\r\n      return opt_noErrorDefault;\r\n    }\r\n  }\r\n  return obj;\r\n}","post":"<h2><code>pull(...)<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px\">\r\n  <div>Retrieve the value found at a given path within an object.<\/div>\r\n  \r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>obj<\/code> {*}:<\/b><br \/>\r\n      The object or primitive to get the value from.\r\n    <\/li>\r\n    <li>\r\n      <b><code>path<\/code> {Array|string}:<\/b><br \/>\r\n      The path to search.  If a string is given it will be split on the dots (<code>.<\/code>).\r\n    <\/li>\r\n    <li>\r\n      <b><code>opt_noErrorDefault<\/code> {*}:<\/b><br \/>\r\n      Optional.  If not specified and the path doesn't exist an error will be thrown.  If specified and the path doesn't exist this value will be returned.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>The value found at <code>path<\/code>.  If the path doesn't exist and <code>opt_noErrorDefault<\/code> is specified, that value will be returned.<\/div>\r\n<\/div>\r\n\r\n<h2>Example<\/h2>\r\n```javascript\r\nconsole.log(YourJS.pull('Cool!', 'length'));  \/\/ -> 5\r\nconsole.log(YourJS.pull(['Cool!'], 'length'));  \/\/ -> 1\r\nconsole.log(YourJS.pull(['Cool!'], '0.length'));  \/\/ -> 5\r\nconsole.log(YourJS.pull(['Cool!'], '1.length'));  \/\/ -> Error:  There is no value at \"1.length\".\r\n```","required_ids":{},"tags":["Object"],"variables":["pull"]});