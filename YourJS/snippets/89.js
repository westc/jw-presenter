storeSnippet({"id":89,"name":"addTypeOf() - Augmenting the Type Checker","description":"Add custom types to the typeOf() function.","js":"var addTypeOf;\r\n(function(baseTypeOf, EXTRA_TYPES, l) {\r\n  addTypeOf = function(constructor, name) {\r\n    for (var i = 0; i < l && EXTRA_TYPES[i][1] != name; i++);\r\n    EXTRA_TYPES[i] = [constructor, name];\r\n    l = EXTRA_TYPES.length;\r\n    if (l == 2) {\r\n      YourJS.typeOf = typeOf = function(value) {\r\n        var test, i = 0, typeName = baseTypeOf(value), argv = arguments, argc = argv.length;\r\n        if (typeName == 'Object') {\r\n          for (; i < l; i++) {\r\n            if (EXTRA_TYPES[i][0] == value.constructor) {\r\n              typeName = EXTRA_TYPES[i][1];\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        for (i = argc; --i && ((typeof(test = argv[i]) == 'string' || typeOf(test) != 'RegExp') ? typeName != test : !test.test(typeName)); );\r\n        return argc > 1 ? !!i : typeName;\r\n      };\r\n    }\r\n  };\r\n})(typeOf, [[Object, 'Object']], 1);","post":"<h2><code>addTypeOf(...)<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px\">\r\n  <div>Add custom types to the <code>typeOf()<\/code> function.<\/div>\r\n  \r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>constructor<\/code> {Function}:<\/b><br \/>\r\n      The constructor of the class to be recognized by <code>typeOf()<\/code>.\r\n    <\/li>\r\n    <li>\r\n      <b><code>name<\/code> {string}:<\/b><br \/>\r\n      The name of the class as it should be returned by <code>typeOf()<\/code>.\r\n    <\/li>\r\n  <\/ol>\r\n<\/div>\r\n\r\n<h2>Examples<\/h2>\r\n<div>If you wanted to add <code>jQuery<\/code> as a recognized type you could do the following:<\/div>\r\n```javascript\r\naddTypeOf(jQuery, 'jQuery');\r\n```\r\n\r\n<div>Now if you wanted to test if something was a jQuery object you could simply do the following:<\/div>\r\n```javascript\r\nvar jDivs = $('div.name');\r\nvar isJQuery = typeOf(jDivs, 'jQuery');\r\n```\r\n\r\n<div>Of course you can also simply return the type name as follows:<\/div>\r\n```javascript\r\nvar jDivs = $('div.name');\r\nvar typeName = typeOf(jDivs);\r\nconsole.log(typeName); \/\/ \"jQuery\"\r\n```","required_ids":{},"tags":["Type Checking"],"variables":["addTypeOf"]});