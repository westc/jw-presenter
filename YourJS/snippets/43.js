storeSnippet({"id":43,"name":"filter() - Keep Specific Values","description":"Creates a new version of an array (or an array-like object) or a object with only the desired values included.","js":"function filter(arrOrObj, fnFilter, opt_filterOut) {\r\n  opt_filterOut = !opt_filterOut;\r\n  fnFilter = getSimpleCallback(fnFilter);\r\n  var me = this, returnsArray = isArrayLike(arrOrObj);\r\n  return reduce(arrOrObj, function(ret, value, key) {\r\n    if (opt_filterOut != !fnFilter.call(me, value, key, arrOrObj)) {\r\n      if (returnsArray) {\r\n        ret.push(value);\r\n      }\r\n      else {\r\n        ret[key] = value;\r\n      }\r\n    }\r\n    return ret;\r\n  }, returnsArray ? [] : {});\r\n}","post":"As of ES5, <code>Array.prototype.filter()<\/code> became available to most modern browsers.  Unfortunately the older browsers and environments don't have this function defined but there are polyfills.  The nice thing about this YourJS snippet is that it defines a similar function which can also be used on array-like objects and normal objects.\r\n\r\n<h2><code>filter()<\/code> API Documentation<\/h2>\r\n<div style=\"margin: 0 30px 30px\">\r\n  <h3>Description<\/h3>\r\n  <div>Creates a new version of an array (or an array-like object) or a object with only the desired values included.<\/div>\r\n  \r\n  <h3>Parameters<\/h3>\r\n  <ol>\r\n    <li>\r\n      <b><code>arrOrObj<\/code> {Array|Object}:<\/b><br \/>\r\n      The array or object to be copied and filtered.\r\n    <\/li>\r\n    <li>\r\n      <b><code>fnFilter<\/code> {function(value,key,arrOrObj)}:<\/b><br \/>\r\n      Function used to filter out keys\/values.  The function will act as an iterator for all of the values in an array\/object and will be passed the <code>value<\/code>, <code>key<\/code>, and <code>arrOrObj<\/code> as the 3 parameters.  If a <code>true<\/code>-ish value is returned, that key\/value pair will be kept in the copy <code>arrOrObj<\/code> passed back from <code>YourJS.filter()<\/code>.  If a <code>false<\/code>-ish value is returned, that key\/value pair will be excluded from the copy of <code>arrOrObj<\/code> passed back from <code>YourJS.filter()<\/code>.\r\n    <\/li>\r\n    <li>\r\n      <b><code>opt_filterOut<\/code> {Boolean}:<\/b><br \/>\r\n      Optional.  Defaults to <code class=\"language-javascript\">false<\/code>.  If <code class=\"language-javascript\">true<\/code>, the values returned will only be those for which <code>fnFilter()<\/code> returns a <code class=\"language-javascript\">false<\/code>-ish value.\r\n    <\/li>\r\n  <\/ol>\r\n  \r\n  <h3>Returns<\/h3>\r\n  <div>Returns a shallow-copy of <code>arrOrObj<\/code> with only the desired keys (or indices) as indicated by <code>fnFilter()<\/code>.<\/div>\r\n<\/div>","required_ids":{"52":"reduce()","81":"isArrayLike() & toArray()","109":"getSimpleCallback() - Get Callbacks By Name"},"tags":["Array","Boolean","Function","Object"],"variables":["filter"]});