storeSnippet({"id":11,"name":"partial() - Partial Application","description":"Presets the left-most arguments in a function.","js":"function partial(fn) {\r\n  var arrArgs = slice(arguments, 1);\r\n  fn = getSimpleCallback(fn);\r\n  return function() {\r\n    return fn.apply(this, arrArgs.concat(slice(arguments)));\r\n  };\r\n}","post":"A nice utility function to have because it gives us the ability to preset the left-most arguments in a function:\r\n```javascript\r\nfunction sum(a) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    a += arguments[i];\r\n  }\r\n  return a;\r\n}\r\n\r\nvar addTo10 = YourJS.partial(sum, 10);\r\nconsole.log(addTo10(20));  \/\/ Results in 30\r\nconsole.log(addTo10(40));  \/\/ Results in 40\r\n```\r\n\r\n<h2>Parameters<\/h2>\r\n<ol>\r\n    <li>\r\n        <b><code>fn<\/code> {Function}<\/b><br \/>\r\n        The function that will be called with the preset arguments.\r\n    <\/li>\r\n    <li>\r\n        <b><code>arg1<\/code> {*}<\/b><br \/>\r\n        The first argument to be sent to <code>fn<\/code>.\r\n    <\/li>\r\n    <li>\r\n        <b><code>...argN<\/code> {*}<\/b><br \/>\r\n        Each additional argument to be sent to <code>fn<\/code> will be a separate argument.\r\n    <\/li>\r\n<\/ol>\r\n\r\n<h2>Returns<\/h2>\r\nThe new function which when called will call <code>fn<\/code> with the specified arguments filled in.","required_ids":{"109":"getSimpleCallback() - Get Callbacks By Name"},"tags":["Function"],"variables":["partial"]});